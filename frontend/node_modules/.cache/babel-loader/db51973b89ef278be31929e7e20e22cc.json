{"ast":null,"code":"var _jsxFileName = \"/home/karlygach/react/frontend/src/services/todos.js\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoDataService {\n  getAll(token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n    return axios.get('http://localhost:8000/api/todos/');\n  }\n\n  createTodo(data, token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n    return axios.post(\"http://localhost:8000/api/todos/\", data);\n  }\n\n  updateTodo(id, data, token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n    return axios.put(`http://localhost:8000/api/todos/${id}`, data);\n  }\n\n  deleteTodo(id, token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n    return axios.delete(`http://localhost:8000/api/todos/${id}`);\n  }\n\n  completeTodo(id, token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n    return axios.put(`http://localhost:8000/api/todos/${id}/complete`);\n  }\n\n  login(data) {\n    return axios.post(\"http://localhost:8000/api/login/\", data);\n  }\n\n  signup(data) {\n    return axios.post(\"http://localhost:8000/api/signup/\", data);\n  }\n\n}\n\nexport default new TodoDataService();\n\n/*#__PURE__*/\n_jsxDEV(Form.Group, {\n  className: \"mb-3\",\n  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n    children: \"Username\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    value: username,\n    onChange: onChangeUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 1\n}, this);","map":{"version":3,"sources":["/home/karlygach/react/frontend/src/services/todos.js"],"names":["axios","TodoDataService","getAll","token","defaults","headers","common","get","createTodo","data","post","updateTodo","id","put","deleteTodo","delete","completeTodo","login","signup","username","onChangeUsername"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACVH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWH,KAA5D;AACA,WAAOH,KAAK,CAACO,GAAN,CAAU,kCAAV,CAAP;AACH;;AACDC,EAAAA,UAAU,CAACC,IAAD,EAAON,KAAP,EAAc;AACpBH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWH,KAA5D;AACA,WAAOH,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA+CD,IAA/C,CAAP;AACH;;AACDE,EAAAA,UAAU,CAACC,EAAD,EAAKH,IAAL,EAAWN,KAAX,EAAkB;AACxBH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWH,KAA5D;AACA,WAAOH,KAAK,CAACa,GAAN,CAAW,mCAAkCD,EAAG,EAAhD,EAAmDH,IAAnD,CAAP;AACH;;AACDK,EAAAA,UAAU,CAACF,EAAD,EAAKT,KAAL,EAAY;AAClBH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWH,KAA5D;AACA,WAAOH,KAAK,CAACe,MAAN,CAAc,mCAAkCH,EAAG,EAAnD,CAAP;AACH;;AACDI,EAAAA,YAAY,CAACJ,EAAD,EAAKT,KAAL,EAAY;AACpBH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWH,KAA5D;AACA,WAAOH,KAAK,CAACa,GAAN,CAAW,mCAAkCD,EAAG,WAAhD,CAAP;AACH;;AACDK,EAAAA,KAAK,CAACR,IAAD,EAAO;AACR,WAAOT,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA+CD,IAA/C,CAAP;AACH;;AACDS,EAAAA,MAAM,CAACT,IAAD,EAAO;AACT,WAAOT,KAAK,CAACU,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,CAAP;AACH;;AA1BiB;;AA4BtB,eAAe,IAAIR,eAAJ,EAAf;;AAEA;AAAA,QAAC,IAAD,CAAM,KAAN;AAAY,EAAA,SAAS,EAAC,MAAtB;AAAA,0BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,KAAK,EAAEkB,QAHX;AAII,IAAA,QAAQ,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nclass TodoDataService {\n    getAll(token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        return axios.get('http://localhost:8000/api/todos/');\n    }\n    createTodo(data, token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        return axios.post(\"http://localhost:8000/api/todos/\", data);\n    }\n    updateTodo(id, data, token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        return axios.put(`http://localhost:8000/api/todos/${id}`, data);\n    }\n    deleteTodo(id, token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        return axios.delete(`http://localhost:8000/api/todos/${id}`);\n    }\n    completeTodo(id, token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        return axios.put(`http://localhost:8000/api/todos/${id}/complete`);\n    }\n    login(data) {\n        return axios.post(\"http://localhost:8000/api/login/\", data);\n    }\n    signup(data) {\n        return axios.post(\"http://localhost:8000/api/signup/\", data);\n    }\n}\nexport default new TodoDataService();\n\n<Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control\n        type=\"text\"\n        placeholder=\"Enter username\"\n        value={username}\n        onChange={onChangeUsername}\n    />\n</Form.Group>"]},"metadata":{},"sourceType":"module"}